[{"/Users/mykolahalushko/WebstormProjects/rs_test/src/index.js":"1","/Users/mykolahalushko/WebstormProjects/rs_test/src/App.js":"2","/Users/mykolahalushko/WebstormProjects/rs_test/src/reportWebVitals.js":"3","/Users/mykolahalushko/WebstormProjects/rs_test/src/components/autpage.js":"4","/Users/mykolahalushko/WebstormProjects/rs_test/src/components/register.js":"5","/Users/mykolahalushko/WebstormProjects/rs_test/src/components/error.js":"6","/Users/mykolahalushko/WebstormProjects/rs_test/src/components/timer.js":"7","/Users/mykolahalushko/WebstormProjects/rs_test/src/components/authenticated.js":"8","/Users/mykolahalushko/WebstormProjects/rs_test/src/components/firebaseConf.js":"9","/Users/mykolahalushko/WebstormProjects/rs_test/src/components/card.js":"10"},{"size":953,"mtime":1608062623000,"results":"11","hashOfConfig":"12"},{"size":795,"mtime":1608068774000,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607532196000,"results":"14","hashOfConfig":"12"},{"size":2616,"mtime":1608086415000,"results":"15","hashOfConfig":"12"},{"size":4198,"mtime":1608129049000,"results":"16","hashOfConfig":"12"},{"size":76,"mtime":1607965111000,"results":"17","hashOfConfig":"12"},{"size":3426,"mtime":1608129049000,"results":"18","hashOfConfig":"12"},{"size":542,"mtime":1608068745000,"results":"19","hashOfConfig":"12"},{"size":530,"mtime":1608062606000,"results":"20","hashOfConfig":"12"},{"size":179,"mtime":1608127817000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"z4uaj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mykolahalushko/WebstormProjects/rs_test/src/index.js",[],["44","45"],"/Users/mykolahalushko/WebstormProjects/rs_test/src/App.js",[],"/Users/mykolahalushko/WebstormProjects/rs_test/src/reportWebVitals.js",[],"/Users/mykolahalushko/WebstormProjects/rs_test/src/components/autpage.js",[],"/Users/mykolahalushko/WebstormProjects/rs_test/src/components/register.js",["46"],"/Users/mykolahalushko/WebstormProjects/rs_test/src/components/error.js",[],"/Users/mykolahalushko/WebstormProjects/rs_test/src/components/timer.js",["47","48","49","50"],"import React, {useState, useEffect, useContext} from \"react\";\nimport firebase from \"firebase\";\nimport {AuthContext} from \"./authenticated\";\nimport firebaseConfig from \"./firebaseConf\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport default function Timer(){\n    const userId = firebase.auth().authUser ? firebase.auth().authUser.uid : null;\n    let [webScreen, setWebScreen] = useState(0)\n    let [mobScreen, setMobScreen] = useState(0)\n    let screenWidth = window.innerWidth\n    const updateWebTimer = (uid, bigScreenTimer) => {\n\n        let postData = {\n            bigScreenTimer,\n        }\n\n        firebase.database().ref(`users/${userId}`).update(postData)\n    }\n    const updateMobTimer = (uid, smallScreenTimer) => {\n\n        let postData = {\n            smallScreenTimer,\n        }\n\n        firebase.database().ref(`users/${userId}`).update(postData)\n    }\n\n    const setWeb = () => {\n        setWebScreen(webScreen => webScreen + 1)\n\n    }\n    const setMob = () => {\n        setMobScreen(mobScreen => mobScreen + 1)\n    }\n\n    let timerRef = firebase.database().ref('users/' + userId)\n\n    useEffect(() => {\n        timerRef.once('value').then(function (snapshot) {\n            const data = snapshot.val()\n            setWebScreen(data.bigScreenTimer)\n            setMobScreen(data.smallScreenTimer)\n        })\n        let timer = setInterval(async function () {\n            if (screenWidth > 400) {\n                setWeb()\n            } else if (screenWidth <= 400) {\n                setMob()\n            }\n\n        }, 1000)\n\n        return () => clearInterval(timer)\n    }, [])\n\n    const updateHelper = async () => {\n        let data = {}\n        await timerRef.once('value').then(function (snapshot) {\n            data = snapshot.val()\n            if (screenWidth <= 400) {\n                setWebScreen(data.bigScreenTimer)\n            }\n            if (screenWidth > 400) {\n                setMobScreen(data.smallScreenTimer)\n            }\n        })\n        if (screenWidth <= 400) {\n            await updateMobTimer(userId, mobScreen)\n        } else if (screenWidth > 400) {\n            await updateWebTimer(userId, webScreen)\n        }\n\n    }\n\n    useEffect(() => {\n        updateHelper()\n    }, [webScreen, mobScreen])\n\n    const {authUser} = useContext(AuthContext);\n    if (!authUser) {\n        return <Redirect to=\"/\" />;\n    }\n\n    function secondsToHms(d) {\n        d = Number(d);\n        // eslint-disable-next-line\n        let hour = Math.floor(d / 3600);\n        let minutes = Math.floor(d % 3600 / 60);\n        let seconds = Math.floor(d % 3600 % 60);\n\n        let hDisplay = hour < 10 ? '0' + hour + ':' : hour + ':';\n        let mDisplay = minutes < 10 ? '0' + minutes + ':' : minutes + ':';\n        let sDisplay = seconds < 10 ? '0' + seconds : seconds;\n        return hDisplay + mDisplay + sDisplay;\n    }\n    return (\n        <div>\n            <a onClick={()=>firebase.auth().signOut()}>Log out</a>\n            <div className=\"timer__body\">\n                <div className=\"timer_container\">\n                    <span container-header>Web</span>\n\n                    <div container-item>{secondsToHms(webScreen)}</div>\n\n                </div>\n                <div className=\"timer_container\">\n                    <span container-header>Mobile</span>\n                    <div container-item>{secondsToHms(mobScreen)}</div>\n\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/mykolahalushko/WebstormProjects/rs_test/src/components/authenticated.js",[],"/Users/mykolahalushko/WebstormProjects/rs_test/src/components/firebaseConf.js",[],"/Users/mykolahalushko/WebstormProjects/rs_test/src/components/card.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":16,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":22},{"ruleId":"60","severity":1,"message":"61","line":56,"column":8,"nodeType":"62","endLine":56,"endColumn":10,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":79,"column":8,"nodeType":"62","endLine":79,"endColumn":30,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":100,"column":13,"nodeType":"68","endLine":100,"endColumn":56},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'firebaseConfig' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'screenWidth' and 'timerRef'. Either include them or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'updateHelper'. Either include it or remove the dependency array.",["72"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [screenWidth, timerRef]",{"range":"77","text":"78"},"Update the dependencies array to be: [webScreen, mobScreen, updateHelper]",{"range":"79","text":"80"},[1619,1621],"[screenWidth, timerRef]",[2247,2269],"[webScreen, mobScreen, updateHelper]"]